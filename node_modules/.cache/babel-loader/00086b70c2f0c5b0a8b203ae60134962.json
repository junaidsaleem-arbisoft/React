{"ast":null,"code":"var _jsxFileName = \"/Users/junaidsaleem/Desktop/weatherApp/weather/React/src/components/WeatherComponent.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport Container from 'react-bootstrap/Container';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BarChart from 'react-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeatherMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        selectedOption: selected\n      });\n    };\n\n    this.state = {\n      locationData: [],\n      temperatureData: [],\n      error: null,\n      citiesData: [],\n      viewSelect: false,\n      selectedOption: null,\n      dailyForecast: null,\n      weeklyForecast: null,\n      apiCalled: false,\n      chartData: [{\n        text: 'Minimum Temperature',\n        value: 0\n      }, {\n        text: 'Maximum Temperature',\n        value: 0\n      }],\n      weeklyData: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getDayData = this.getDayData.bind(this);\n    this.getWeeklyData = this.getWeeklyData.bind(this);\n    this.getDataService = this.getDataService.bind(this);\n    this.jsonData = null;\n  }\n\n  async getDataService(url, value, param) {\n    var data = await fetch(url + value + param + process.env.REACT_APP_API_KEY + \"&language=en-us\");\n    var json = await data.json();\n    return json;\n  }\n\n  async getWeeklyData() {\n    const jsonData = this.jsonData;\n    let max = null,\n        min = null;\n    var objs = [];\n\n    if (this.state.selectedOption != null) {\n      const city = jsonData[this.state.selectedOption.value].Key;\n      const data = await this.getDataService(process.env.REACT_APP_WEEK_URL, city, process.env.REACT_APP_FORECAST_PARAM);\n\n      if (data != null) {\n        for (let i = 0; i < data.DailyForecasts.length && this.state.weeklyData.length < 5; i++) {\n          min = data.DailyForecasts[i].Temperature.Minimum.Value;\n          max = data.DailyForecasts[i].Temperature.Maximum.Value;\n          let dateObj = new Date(data.DailyForecasts[i].Date);\n          objs.push({\n            minimum: min,\n            maximum: max,\n            date: dateObj.toDateString()\n          });\n        }\n\n        this.setState({\n          weeklyData: objs\n        });\n      }\n    }\n  }\n\n  async getDayData() {\n    const jsonData = this.jsonData;\n    let max = null,\n        min = null;\n\n    if (this.state.selectedOption != null && this.state.apiCalled) {\n      const city = jsonData[this.state.selectedOption.value].Key;\n      const data = await this.getDataService(process.env.REACT_APP_DAY_URL, city, process.env.REACT_APP_FORECAST_PARAM);\n\n      if (data != null) {\n        min = data.DailyForecasts[0].Temperature.Minimum.Value;\n        max = data.DailyForecasts[0].Temperature.Maximum.Value;\n      }\n\n      this.setState({\n        apiCalled: false,\n        chartData: [{\n          text: 'Minimum Temperature',\n          value: min\n        }, {\n          text: 'Maximum Temperature',\n          value: max\n        }]\n      }, () => {\n        this.getWeeklyData();\n      });\n    }\n  }\n\n  async handleInputChange(value) {\n    this.setState({\n      citiesData: []\n    });\n\n    if (value.length > 0) {\n      const data = await this.getDataService(process.env.REACT_APP_CITY_URL, value, process.env.REACT_APP_CITY_PARAM);\n      this.jsonData = data;\n\n      for (let i = 0; i < data.length; i++) {\n        this.state.citiesData.push({\n          label: data[i].LocalizedName + \",\" + data[i].AdministrativeArea.LocalizedName + \",\" + data[i].Country.LocalizedName,\n          value: i\n        });\n      }\n\n      this.setState({\n        apiCalled: true,\n        selectedOption: null\n      });\n      return this.state.citiesData;\n    }\n  }\n\n  async componentDidUpdate() {\n    await this.getDayData();\n  }\n\n  render() {\n    const margin = {\n      top: 20,\n      right: 0,\n      bottom: 30,\n      left: 40\n    };\n    const weeklyForecastList = this.state.weeklyData.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Date: \", d.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \"Minimum: \", d.minimum, \"F\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), \"Maximum: \", d.maximum, \"F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(AsyncSelect, {\n              cacheOptions: true,\n              defaultOptions: true,\n              placeholder: \"Search a city\",\n              loadOptions: this.handleInputChange,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Daily Temperature Graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Weekly Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: weeklyForecastList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherMain;","map":{"version":3,"sources":["/Users/junaidsaleem/Desktop/weatherApp/weather/React/src/components/WeatherComponent.js"],"names":["React","Component","Select","AsyncSelect","Container","Header","Footer","Row","Col","BarChart","WeatherMain","constructor","props","handleChange","selected","setState","selectedOption","state","locationData","temperatureData","error","citiesData","viewSelect","dailyForecast","weeklyForecast","apiCalled","chartData","text","value","weeklyData","handleInputChange","bind","getDayData","getWeeklyData","getDataService","jsonData","url","param","data","fetch","process","env","REACT_APP_API_KEY","json","max","min","objs","city","Key","REACT_APP_WEEK_URL","REACT_APP_FORECAST_PARAM","i","DailyForecasts","length","Temperature","Minimum","Value","Maximum","dateObj","Date","push","minimum","maximum","date","toDateString","REACT_APP_DAY_URL","REACT_APP_CITY_URL","REACT_APP_CITY_PARAM","label","LocalizedName","AdministrativeArea","Country","componentDidUpdate","render","margin","top","right","bottom","left","weeklyForecastList","map","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport Container from 'react-bootstrap/Container';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BarChart from 'react-bar-chart';\n\nclass WeatherMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationData: [],\n            temperatureData: [],\n            error: null,\n            citiesData: [],\n            viewSelect: false,\n            selectedOption: null,\n            dailyForecast: null,\n            weeklyForecast: null,\n            apiCalled: false,\n            chartData: [\n                { text: 'Minimum Temperature', value: 0 },\n                { text: 'Maximum Temperature', value: 0 }\n            ],\n            weeklyData: []\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getDayData = this.getDayData.bind(this);\n        this.getWeeklyData = this.getWeeklyData.bind(this);\n        this.getDataService = this.getDataService.bind(this);\n        this.jsonData = null;\n    }\n\n    async getDataService(url, value, param) {\n        var data = await fetch(url + value + param + process.env.REACT_APP_API_KEY + \"&language=en-us\")\n        var json = await data.json()\n        return json;\n    }\n\n    async getWeeklyData() {\n        const jsonData = this.jsonData;\n        let max = null, min = null;\n        var objs = []\n        if (this.state.selectedOption != null) {\n            const city = jsonData[this.state.selectedOption.value].Key\n            const data = await this.getDataService(process.env.REACT_APP_WEEK_URL, city, process.env.REACT_APP_FORECAST_PARAM)\n            if (data != null) {\n                for (let i = 0; i < data.DailyForecasts.length && this.state.weeklyData.length < 5; i++) {\n                    min = data.DailyForecasts[i].Temperature.Minimum.Value\n                    max = data.DailyForecasts[i].Temperature.Maximum.Value\n                    let dateObj = new Date(data.DailyForecasts[i].Date)\n                    objs.push(\n                        { minimum: min, maximum: max, date: dateObj.toDateString() }\n                    )\n                }\n                this.setState({\n                    weeklyData: objs\n                })\n            }\n        }\n    }\n\n    async getDayData() {\n        const jsonData = this.jsonData;\n        let max = null, min = null;\n        if (this.state.selectedOption != null && this.state.apiCalled) {\n            const city = jsonData[this.state.selectedOption.value].Key\n            const data = await this.getDataService(process.env.REACT_APP_DAY_URL, city, process.env.REACT_APP_FORECAST_PARAM)\n            if (data != null) {\n                min = data.DailyForecasts[0].Temperature.Minimum.Value\n                max = data.DailyForecasts[0].Temperature.Maximum.Value\n            }\n            this.setState({\n                apiCalled: false,\n                chartData: [\n                    { text: 'Minimum Temperature', value: min },\n                    { text: 'Maximum Temperature', value: max }\n                ]\n            },\n                () => {\n                    this.getWeeklyData()\n                });\n        }\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            selectedOption: selected,\n        });\n    };\n\n    async handleInputChange(value) {\n        this.setState({\n            citiesData: []\n        })\n        if (value.length > 0) {\n            const data = await this.getDataService(process.env.REACT_APP_CITY_URL, value, process.env.REACT_APP_CITY_PARAM)\n            this.jsonData = data;\n            for (let i = 0; i < data.length; i++) {\n                this.state.citiesData.push({ label: data[i].LocalizedName + \",\" + data[i].AdministrativeArea.LocalizedName + \",\" + data[i].Country.LocalizedName, value: i })\n            }\n            this.setState({\n                apiCalled: true,\n                selectedOption: null\n            })\n            return this.state.citiesData;\n        }\n    }\n\n    async componentDidUpdate() {\n        await this.getDayData()\n    }\n\n    render() {\n        const margin = { top: 20, right: 0, bottom: 30, left: 40 };\n        const weeklyForecastList = this.state.weeklyData.map((d) =>\n            <div>\n                <li>Date: {d.date}\n                    <br></br>\n                    Minimum: {d.minimum}F\n                    <br></br>\n                    Maximum: {d.maximum}F\n                </li>\n            </div>\n        );\n        return (\n            <div>\n                <Header />\n                <Container>\n                    <br></br>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <AsyncSelect\n                                cacheOptions\n                                defaultOptions\n                                placeholder=\"Search a city\"\n                                loadOptions={this.handleInputChange}\n                                onChange={this.handleChange}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <br></br>\n                            <h3> Daily Temperature Graph</h3>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            \n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <br></br>\n                            <h3> Weekly Forecast</h3>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            {weeklyForecastList}\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default WeatherMain;"]},"metadata":{},"sourceType":"module"}