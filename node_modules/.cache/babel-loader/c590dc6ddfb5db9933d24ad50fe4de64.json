{"ast":null,"code":"var _jsxFileName = \"/Users/junaidsaleem/Desktop/weatherApp/weather/React/src/components/WeatherComponent.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport Container from 'react-bootstrap/Container';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BarChart from 'react-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WeatherMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selected => {\n      this.setState({\n        selectedOption: selected\n      });\n    };\n\n    this.state = {\n      locationData: [],\n      temperatureData: [],\n      error: null,\n      citiesData: [],\n      viewSelect: false,\n      selectedOption: null,\n      dailyForecast: null,\n      weeklyForecast: null,\n      apiCalled: false,\n      width: 400,\n      chartData: [{\n        text: 'Minimum Temperature',\n        value: 0\n      }, {\n        text: 'Maximum Temperature',\n        value: 0\n      }],\n      weeklyData: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.getDayData = this.getDayData.bind(this);\n    this.getWeeklyData = this.getWeeklyData.bind(this);\n    this.getCityData = this.getCityData.bind(this);\n    this.jsonData = null;\n  }\n\n  getCityData(value) {\n    fetch('http://dataservice.accuweather.com/locations/v1/cities/search/?q=' + value + \"&apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\").then(res => res.json()).then(result => {\n      this.setState({\n        locationData: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  getWeeklyData() {\n    const data = this.jsonData;\n    let max = null,\n        min = null;\n\n    if (this.state.selectedOption != null) {\n      const city = data[this.state.selectedOption.value].Key;\n      fetch(\"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\" + city + \"?apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\").then(res => res.json()).then(result => {\n        this.setState({\n          weeklyForecast: result\n        });\n        const data = this.state.weeklyForecast;\n\n        if (data != null) {\n          for (let i = 0; i < data.DailyForecasts.length && this.state.weeklyData.length < 5; i++) {\n            min = data.DailyForecasts[i].Temperature.Minimum.Value;\n            max = data.DailyForecasts[i].Temperature.Maximum.Value;\n            let dateObj = new Date(data.DailyForecasts[i].Date);\n            this.state.weeklyData.push({\n              minimum: min,\n              maximum: max,\n              date: dateObj.toDateString()\n            });\n          }\n\n          console.log(this.state.weeklyData);\n        }\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    }\n  }\n\n  getDayData() {\n    const data = this.jsonData;\n    let max = null,\n        min = null;\n\n    if (this.state.selectedOption != null && this.state.apiCalled) {\n      const city = data[this.state.selectedOption.value].Key;\n      fetch(\"http://dataservice.accuweather.com/forecasts/v1/daily/1day/\" + city + \"?apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\").then(res => res.json()).then(result => {\n        this.setState({\n          dailyForecast: result\n        });\n        const data = this.state.dailyForecast;\n\n        if (data != null) {\n          min = data.DailyForecasts[0].Temperature.Minimum.Value;\n          max = data.DailyForecasts[0].Temperature.Maximum.Value;\n        }\n\n        this.setState({\n          apiCalled: false,\n          chartData: [{\n            text: 'Minimum Temperature',\n            value: min\n          }, {\n            text: 'Maximum Temperature',\n            value: max\n          }]\n        }, () => {\n          this.getWeeklyData();\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n    }\n  }\n\n  handleInputChange(value) {\n    this.setState({\n      citiesData: []\n    });\n\n    if (value.length > 0) {\n      this.getCityData(value);\n      const data = this.state.locationData;\n      this.jsonData = this.state.locationData;\n\n      for (let i = 0; i < data.length; i++) {\n        this.state.citiesData.push({\n          label: data[i].LocalizedName + \",\" + data[i].AdministrativeArea.LocalizedName + \",\" + data[i].Country.LocalizedName,\n          value: i\n        });\n      }\n\n      console.log(this.state.citiesData);\n      this.setState({\n        viewSelect: true,\n        apiCalled: true,\n        selectedOption: null\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.getDayData();\n  }\n\n  render() {\n    const margin = {\n      top: 20,\n      right: 0,\n      bottom: 30,\n      left: 40\n    };\n    const weeklyForecastList = this.state.weeklyData.map(d => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Date: \", d.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Minimum: \", d.minimum, \"F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Maximum: \", d.maximum, \"F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Search a city\",\n              options: this.state.citiesData,\n              onInputChange: this.handleInputChange,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Daily Temperature Graph\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: /*#__PURE__*/_jsxDEV(BarChart, {\n              ylabel: \"Daily Forecast in F\",\n              width: this.state.width,\n              height: 500,\n              margin: margin,\n              data: this.state.chartData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Weekly Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"4\",\n            children: weeklyForecastList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WeatherMain;","map":{"version":3,"sources":["/Users/junaidsaleem/Desktop/weatherApp/weather/React/src/components/WeatherComponent.js"],"names":["React","Component","Select","Container","Header","Footer","Row","Col","BarChart","WeatherMain","constructor","props","handleChange","selected","setState","selectedOption","state","locationData","temperatureData","error","citiesData","viewSelect","dailyForecast","weeklyForecast","apiCalled","width","chartData","text","value","weeklyData","handleInputChange","bind","getDayData","getWeeklyData","getCityData","jsonData","fetch","process","env","REACT_APP_API_KEY","then","res","json","result","data","max","min","city","Key","i","DailyForecasts","length","Temperature","Minimum","Value","Maximum","dateObj","Date","push","minimum","maximum","date","toDateString","console","log","label","LocalizedName","AdministrativeArea","Country","componentDidUpdate","render","margin","top","right","bottom","left","weeklyForecastList","map","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Container from 'react-bootstrap/Container';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport BarChart from 'react-bar-chart';\n\nclass WeatherMain extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationData: [],\n            temperatureData: [],\n            error: null,\n            citiesData: [],\n            viewSelect: false,\n            selectedOption: null,\n            dailyForecast: null,\n            weeklyForecast: null,\n            apiCalled: false,\n            width: 400,\n            chartData: [\n                { text: 'Minimum Temperature', value: 0 },\n                { text: 'Maximum Temperature', value: 0 }\n            ],\n            weeklyData: []\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getDayData = this.getDayData.bind(this);\n        this.getWeeklyData = this.getWeeklyData.bind(this);\n        this.getCityData = this.getCityData.bind(this);\n        this.jsonData = null;\n    }\n\n    getCityData(value) {\n        fetch('http://dataservice.accuweather.com/locations/v1/cities/search/?q=' + value + \"&apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        locationData: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        error\n                    });\n                }\n            )\n    }\n\n    getWeeklyData() {\n        const data = this.jsonData;\n        let max = null, min = null;\n        if (this.state.selectedOption != null) {\n            const city = data[this.state.selectedOption.value].Key\n            fetch(\"http://dataservice.accuweather.com/forecasts/v1/daily/5day/\" + city + \"?apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\")\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                            weeklyForecast: result\n                        });\n                        const data = this.state.weeklyForecast;\n                        if (data != null) {\n                            for (let i = 0; i < data.DailyForecasts.length && this.state.weeklyData.length < 5; i++) {\n                                min = data.DailyForecasts[i].Temperature.Minimum.Value\n                                max = data.DailyForecasts[i].Temperature.Maximum.Value\n                                let dateObj = new Date(data.DailyForecasts[i].Date)\n                                this.state.weeklyData.push(\n                                    { minimum: min, maximum: max, date: dateObj.toDateString() }\n                                )\n                            }\n                            console.log(this.state.weeklyData)\n                        }\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                )\n        }\n    }\n\n    getDayData() {\n        const data = this.jsonData;\n        let max = null, min = null;\n        if (this.state.selectedOption != null && this.state.apiCalled) {\n            const city = data[this.state.selectedOption.value].Key\n            fetch(\"http://dataservice.accuweather.com/forecasts/v1/daily/1day/\" + city + \"?apikey=\" + process.env.REACT_APP_API_KEY + \"&language=en-us\")\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                            dailyForecast: result\n                        });\n                        const data = this.state.dailyForecast;\n                        if (data != null) {\n                            min = data.DailyForecasts[0].Temperature.Minimum.Value\n                            max = data.DailyForecasts[0].Temperature.Maximum.Value\n                        }\n                        this.setState({\n                            apiCalled: false,\n                            chartData: [\n                                { text: 'Minimum Temperature', value: min },\n                                { text: 'Maximum Temperature', value: max }\n                            ]\n                        },\n                            () => {\n                                this.getWeeklyData()\n                            });\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                )\n        }\n    }\n\n    handleChange = (selected) => {\n        this.setState({\n            selectedOption: selected,\n        });\n    };\n\n    handleInputChange(value) {\n        this.setState({\n            citiesData: []\n        })\n        if (value.length > 0) {\n            this.getCityData(value)\n            const data = this.state.locationData\n            this.jsonData = this.state.locationData;\n            for (let i = 0; i < data.length; i++) {\n                this.state.citiesData.push({ label: data[i].LocalizedName + \",\" + data[i].AdministrativeArea.LocalizedName + \",\" + data[i].Country.LocalizedName, value: i })\n            }\n            console.log(this.state.citiesData)\n            this.setState({\n                viewSelect: true,\n                apiCalled: true,\n                selectedOption: null\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        this.getDayData()\n    }\n\n    render() {\n        const margin = { top: 20, right: 0, bottom: 30, left: 40 };\n        const weeklyForecastList = this.state.weeklyData.map((d) =>\n            <div>\n                <li>Date: {d.date}</li>\n                <li>Minimum: {d.minimum}F</li>\n                <li>Maximum: {d.maximum}F</li>\n                <br></br>\n            </div>\n        );\n        return (\n            <div>\n                <Header />\n                <Container>\n                    <br></br>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <Select\n                                placeholder=\"Search a city\"\n                                options={this.state.citiesData}\n                                onInputChange={this.handleInputChange}\n                                onChange={this.handleChange}\n                            />\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <br></br>\n                            <h3> Daily Temperature Graph</h3>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <BarChart ylabel='Daily Forecast in F'\n                                width={this.state.width}\n                                height={500}\n                                margin={margin}\n                                data={this.state.chartData} />\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            <br></br>\n                            <h3> Weekly Forecast</h3>\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-md-center\">\n                        <Col lg=\"4\">\n                            {weeklyForecastList}\n                        </Col>\n                    </Row>\n                </Container>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default WeatherMain;"]},"metadata":{},"sourceType":"module"}